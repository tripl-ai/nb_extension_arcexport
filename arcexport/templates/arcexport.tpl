{"stages": [
{% for cell in nb.cells if cell.cell_type == "code" and cell.source.strip() and (not cell.source.lstrip().startswith( "%" ) or cell.source.lstrip().startswith( "%arc" ) or cell.source.lstrip().startswith( "%sql" )) -%}
  {% if not cell.source.lstrip().startswith( "%arc" ) %}{{ cell.source }}{{ "," if not loop.last }}{% endif %}{% if cell.source.lstrip().startswith( "%arc" ) %}{{ "\n".join(cell.source.split("\n")[1:]) }}{{ "," if not loop.last }}{% endif %}{% if cell.source.lstrip().startswith( "%sqlvalidate" ) %}{{ import json; import shlex; params = dict(s.split('=', 1) for s in shlex.split(cell.split("\n")[0])[1:]); sqlParams = dict(s.split('=') for s in params['sqlParams'].split(',')) if "sqlParams" in params else {}; s = {}; s['type'] = "SQLValidate"; s['name'] = params["name"] if "name" in params else ""; s['description'] = params["description"] if "description" in params else ""; s['environments'] = params["environments"].split(',') if "environments" in params else []; s['sql'] = (" ").join(map(lambda x: x.strip(), cell.split("\n")[1::])); s['sqlParams'] = dict(s.split('=') for s in params['sqlParams'].split(',')) if "sqlParams" in params else {}; json.dumps(s, indent=2) }}{{ "," if not loop.last }}{% endif %}{% if cell.source.lstrip().startswith( "%sql " ) %}{{ import json; import shlex; params = dict(s.split('=', 1) for s in shlex.split(cell.split("\n")[0])[1:]); sqlParams = dict(s.split('=') for s in params['sqlParams'].split(',')) if "sqlParams" in params else {}; s = {}; s['type'] = "SQLTransform"; s['name'] = params["name"] if "name" in params else ""; s['description'] = params["description"] if "description" in params else ""; s['environments'] = params["environments"].split(',') if "environments" in params else []; s['sql'] = (" ").join(map(lambda x: x.strip(), cell.split("\n")[1::])); s['outputView'] = params["outputView"] if "outputView" in params else ""; s['persist'] = params["persist"] == "true" if "persist" in params else false; s['sqlParams'] = dict(s.split('=') for s in params['sqlParams'].split(',')) if "sqlParams" in params else {}; json.dumps(s, indent=2) }}{{ "," if not loop.last }}{% endif %}
{% endfor %}]}